// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int       @id @default(autoincrement())
  username String    @unique
  password String
  Process  Process[]
}

model User {
  id                      String                    @id @unique
  name                    String
  username                String                    @unique
  avatar                  String
  email                   String?
  timerPreserved          Boolean                   @default(false)
  timerLastDuration       Int                       @default(0)
  timerId                 String?
  balance                 Int                       @default(335)
  spins                   Int                       @default(0)
  vcn                     String?
  fortuneItems            FortuneItem[]
  fortuneOrder            Int[]
  twitterTokens           TwitterOAuthAccessToken[]
  twitterUser             TwitterUser?
  scripted                Boolean                   @default(false)
  scriptId                String?
  processes               Process[]
  withdraw                Int                       @default(0)
  ready                   Boolean                   @default(false)
}

model TwitterOAuthAccessToken {
  id          Int      @id @default(autoincrement())
  token       String
  tokenSecret String
  timestamp   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model TwitterDM {
  id               String                @id @unique
  eventType        String
  senderId         String
  createdAt        DateTime
  text             String
  dmConversation   TwitterDMConversation @relation(fields: [dmConversationId], references: [id])
  dmConversationId String
}

model TwitterDMConversation {
  id           String             @id @unique
  messages     TwitterDM[]
  includes     TwitterDMInclude[]
  participants TwitterUser[]
}

enum TwitterDMIncludeType {
  user
  tweet
  media
  place
  poll
}

model TwitterDMInclude {
  id            String                  @id @unique
  type          TwitterDMIncludeType
  data          Json?
  conversations TwitterDMConversation[]
}

model TwitterUser {
  id            String                  @id @unique
  user          User?                   @relation(fields: [userId], references: [id])
  userId        String?                 @unique
  tweets        TwitterTweet[]
  mentions      TwitterTweet[]          @relation("TwitterMentions")
  liked         TwitterTweet[]          @relation("TwitterLikes")
  followers     TwitterUser[]           @relation("TwitterFollow")
  followings    TwitterUser[]           @relation("TwitterFollow")
  conversations TwitterDMConversation[]
  data          Json?
}

model TwitterTweet {
  id        String        @id @unique
  text      String
  createdAt DateTime
  data      Json?
  author    TwitterUser   @relation(fields: [authorId], references: [id])
  authorId  String
  likes     TwitterUser[] @relation("TwitterLikes")
  mentions  TwitterUser[] @relation("TwitterMentions")
}

enum ProcessClass {
  PRIMARY
  SECONDARY
}

model Process {
  id        Int          @id @default(autoincrement())
  type      String
  class     ProcessClass
  timestamp DateTime     @default(now())
  data      Json?
  user      User?        @relation(fields: [userId], references: [id])
  userId    String?
  admin     Admin?       @relation(fields: [adminId], references: [id])
  adminId   Int?
}

enum FortuneClass {
  T
  S
  J
  N
}

model FortuneItem {
  id        Int          @id @default(autoincrement())
  title     String
  bgcolor   String       @default("black")
  fgcolor   String       @default("white")
  class     FortuneClass
  arguments String?
  user      User?        @relation(fields: [userId], references: [id])
  userId    String?
}
